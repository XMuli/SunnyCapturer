; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#pragma parseroption -p
#define MyAppName "Sunny"
#define MyAppVersion "1.0.0"
#define MyAppPublisher "Vincent Teams"
#define MyAppURL "https://github.com/XMuli/Sunny"
#define MyAppExeName "Sunny.exe"
#define MyArchitecture "x64"
#define MyCOMPILER_ID "MSVC"
#define MySrc "."
#define MyBinDir "./bin"
#define MyOutputDir "../Archived"



[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{FA8A4B7A-24C2-45AF-B4A0-14A15ABD4530}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
;DisableProgramGroupPage=yes
LicenseFile={#MyBinDir}\resources\licenses\License.md
InfoBeforeFile={#MyBinDir}\resources\licenses\PrivacyAndDataProtection.md
;InfoAfterFile={#MyBinDir}\resources\licenses\other.md

; Uncomment the following line to run in non-administrative install mode (install for current user only.)
; PrivilegesRequiredOverridesAllowed 的两个参数，dialog 可选安装路径； commandline 不可选路径
PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=commandline   
OutputDir={#MyOutputDir}
OutputBaseFilename={#MyAppName}_Setup_{#MyAppVersion}_{#MyCOMPILER_ID}_{#MyArchitecture}
SetupIconFile={#MyBinDir}\resources\logo\logo.ico
Password=
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "armenian"; MessagesFile: "compiler:Languages\Armenian.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
Name: "bulgarian"; MessagesFile: "compiler:Languages\Bulgarian.isl"
Name: "catalan"; MessagesFile: "compiler:Languages\Catalan.isl"
Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"
Name: "chinesetraditional"; MessagesFile: "compiler:Languages\ChineseTraditional.isl"
Name: "corsican"; MessagesFile: "compiler:Languages\Corsican.isl"
Name: "czech"; MessagesFile: "compiler:Languages\Czech.isl"
Name: "danish"; MessagesFile: "compiler:Languages\Danish.isl"
Name: "dutch"; MessagesFile: "compiler:Languages\Dutch.isl"
Name: "finnish"; MessagesFile: "compiler:Languages\Finnish.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"
Name: "hebrew"; MessagesFile: "compiler:Languages\Hebrew.isl"
Name: "hungarian"; MessagesFile: "compiler:Languages\Hungarian.isl"
Name: "icelandic"; MessagesFile: "compiler:Languages\Icelandic.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"
Name: "norwegian"; MessagesFile: "compiler:Languages\Norwegian.isl"
Name: "polish"; MessagesFile: "compiler:Languages\Polish.isl"
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "slovak"; MessagesFile: "compiler:Languages\Slovak.isl"
Name: "slovenian"; MessagesFile: "compiler:Languages\Slovenian.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
Name: "turkish"; MessagesFile: "compiler:Languages\Turkish.isl"
Name: "ukrainian"; MessagesFile: "compiler:Languages\Ukrainian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "{#MyBinDir}\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#MyBinDir}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
procedure InstallVCRuntime( );
var
  szParam, szExecutable, szArchitecture, StatusMsg, szFileExists: String;
  nRetCode: Integer;
  bFileExists, bVCRuntimeInstalled: Boolean; // 定义一个布尔变量
  
begin
  szArchitecture := '{#MyArchitecture}';
  if szArchitecture  = 'x64' then
  begin
    szExecutable := ExpandConstant('{app}') + '\VC_redist.x64.exe';
    bVCRuntimeInstalled := RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{8bdfe669-9705-4184-9368-db9ce581e0e7}');
  end
  else
  begin
    szExecutable := ExpandConstant('{app}') + '\VC_redist.x86.exe';
    bVCRuntimeInstalled := RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{8bdfe669-9705-4184-9368-db9ce581e0e7}');  // 需要修改对应的 x86 guid 数值
  end;
  

  bFileExists := FileExists(szExecutable);

  if bVCRuntimeInstalled then
    StatusMsg := 'True'
  else
    StatusMsg := 'False';
	
  if bFileExists then
    szFileExists := 'True'
  else
    szFileExists := 'False';

    MsgBox('szExecutable：' + szExecutable + ' ' + '{app}' + szArchitecture, mbInformation, MB_OK);
    MsgBox('StatusMsg:' + StatusMsg + ' szFileExists:' + szFileExists, mbInformation, MB_OK);
    MsgBox('The value of {app} is: ' + ExpandConstant('{app}'), mbInformation, MB_OK);

	Log('Executable file not found: ' + szExecutable);

  // 检查系统中是否已经安装了 VC_redist，如果已经安装则跳过
  if bVCRuntimeInstalled then
    begin
    MsgBox('@0', mbInformation, MB_OK);
    Log('VC_redist is already installed. Skipping installation.');
    end
  else
    if bFileExists then
      begin
      MsgBox('@1', mbInformation, MB_OK);
      szParam := '/install /quiet /norestart';
      Exec(szExecutable, szParam, '', SW_HIDE, ewWaitUntilTerminated, nRetCode);
      Sleep(100);
      end
    else
      begin
      MsgBox('@2', mbInformation, MB_OK);
      Log('Executable file not found: ' + szExecutable);
      end
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    InstallVCRuntime();
    Log('RESULTCODE=0');
  end;
end;
